- name: Dieses Script lädt ein DietPi Image herunter, entpackt es, lädt es als loop device, mounted die Dateien in ein temporäres verzeichnis und überträgt die Daten dann auf das NAS. 
        Von dort aus kann es dann als netboot "Image" weiter verwendet werden. 
  block:

    - name: download {{ file }}.xz
      get_url: url={{ image_url }} dest={{ image_dst }}/{{ file }}.xz
    - name: Extract {{ file }} in {{ image_dst }}
      ansible.builtin.command: unxz {{ image_dst }}/{{ file }}.xz
    - name: Mount the image {{ file }}
      ansible.builtin.command:  kpartx -av  {{ image_dst }}/{{ file }}


    - name: Make sure the loop devices are free
      ansible.builtin.command: losetup -d /dev/loop0
    - name: Make sure the loop devices are free
      ansible.builtin.command: kpartx -dv /dev/loop0
    #- name: Reload Daemon because the fstab has maybe some changed without restart. This leads to issues when mounting a devices. 
    #  ansible.builtin.systemd_service:
    #    daemon_reload: true
    - name: Create the loop map devices
      ansible.builtin.command: kpartx -av {{ image_dst  }}/{{ file }}
    - name: Mount the rootfs from the img to the tempory rootfs directory
      ansible.builtin.command: mount /dev/mapper/loop0p2 /mnt/tmp/rootfs/
    - name: Mount the boot from the img to the tempory boot directory
      ansible.builtin.command: mount /dev/mapper/loop0p1 /mnt/tmp/boot/
    - name: Transmit the rootfs to the NAS share
      ansible.builtin.command: rsync -xa --progress /mnt/tmp/rootfs/ /mnt/nfsshare/rootfs/{{name_of_folder}}
    - name: Transmit the boot files to the NAS share
      ansible.builtin.command: rsync -xa --progress /mnt/tmp/boot/ /mnt/nfsshare/tftp/{{name_of_folder}}
  always: 
    - name: unmount mounted directories first
      ansible.builtin.command: umount /mnt/tmp/rootfs/
      ignore_errors: true
    - name: unmount mounted directories first
      ansible.builtin.command: umount /mnt/tmp/boot/
      ignore_errors: true
    - name: Cleanup directories
      file:
        path: "{{ item }}"
        state: absent
      ignore_errors: true
      with_items:
        - /mnt/tmp/rootfs/
        - mnt/tmp/boot/
        - "{{ image_dst  }}"
    - name: Make sure the loop devices are free
      ansible.builtin.command: losetup -d /dev/loop0
      ignore_errors: true
    - name: Make sure the loop devices are free
      ansible.builtin.command: kpartx -dv /dev/loop0
      ignore_errors: true